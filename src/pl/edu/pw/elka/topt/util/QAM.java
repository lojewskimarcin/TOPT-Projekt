package pl.edu.pw.elka.topt.util;

import pl.edu.pw.elka.topt.model.Point;

import java.util.ArrayList;
import java.util.List;

public class QAM {
    public static List<Point> POINTS_4QAM = new ArrayList<>();
    public static List<Point> POINTS_16QAM = new ArrayList<>();
    public static List<Point> POINTS_64QAM = new ArrayList<>();
    public static List<Point> POINTS_256QAM = new ArrayList<>();

    static {
        POINTS_4QAM = new ArrayList<>();
        POINTS_4QAM.add(new Point(-0.5, 0.5, -1 - Constant.CARTESIAN_AXES_INFINITY, 0, 0, 1 + Constant.CARTESIAN_AXES_INFINITY, 2));
        POINTS_4QAM.add(new Point(0.5, 0.5, 0, 1 + Constant.CARTESIAN_AXES_INFINITY, 0, 1 + Constant.CARTESIAN_AXES_INFINITY, 0));
        POINTS_4QAM.add(new Point(-0.5, -0.5, -1 - Constant.CARTESIAN_AXES_INFINITY, 0, -1 - Constant.CARTESIAN_AXES_INFINITY, 0, 3));
        POINTS_4QAM.add(new Point(0.5, -0.5, 0, 1 + Constant.CARTESIAN_AXES_INFINITY, -1 - Constant.CARTESIAN_AXES_INFINITY, 0, 1));


        POINTS_16QAM.add(new Point(-1.5, 1.5, -2 - Constant.CARTESIAN_AXES_INFINITY, -1, 1, 2 + Constant.CARTESIAN_AXES_INFINITY, 0));
        POINTS_16QAM.add(new Point(-0.5, 1.5, -1, 0, 1, 2 + Constant.CARTESIAN_AXES_INFINITY, 4));
        POINTS_16QAM.add(new Point(0.5, 1.5, 0, 1, 1, 2 + Constant.CARTESIAN_AXES_INFINITY, 12));
        POINTS_16QAM.add(new Point(1.5, 1.5, 1, 2 + Constant.CARTESIAN_AXES_INFINITY, 1, 2 + Constant.CARTESIAN_AXES_INFINITY, 8));
        POINTS_16QAM.add(new Point(-1.5, 0.5, -2 - Constant.CARTESIAN_AXES_INFINITY, -1, 0, 1, 1));
        POINTS_16QAM.add(new Point(-0.5, 0.5, -1, 0, 0, 1, 5));
        POINTS_16QAM.add(new Point(0.5, 0.5, 0, 1, 0, 1, 13));
        POINTS_16QAM.add(new Point(1.5, 0.5, 1, 2 + Constant.CARTESIAN_AXES_INFINITY, 0, 1, 9));
        POINTS_16QAM.add(new Point(-1.5, -0.5, -2 - Constant.CARTESIAN_AXES_INFINITY, -1, -1, 0, 3));
        POINTS_16QAM.add(new Point(-0.5, -0.5, -1, 0, -1, 0, 7));
        POINTS_16QAM.add(new Point(0.5, -0.5, 0, 1, -1, 0, 15));
        POINTS_16QAM.add(new Point(1.5, -0.5, 1, 2 + Constant.CARTESIAN_AXES_INFINITY, -1, 0, 11));
        POINTS_16QAM.add(new Point(-1.5, -1.5, -2 - Constant.CARTESIAN_AXES_INFINITY, -1, -2 - Constant.CARTESIAN_AXES_INFINITY, -1, 2));
        POINTS_16QAM.add(new Point(-0.5, -1.5, -1, 0, -2 - Constant.CARTESIAN_AXES_INFINITY, -1, 6));
        POINTS_16QAM.add(new Point(0.5, -1.5, 0, 1, -2 - Constant.CARTESIAN_AXES_INFINITY, -1, 14));
        POINTS_16QAM.add(new Point(1.5, -1.5, 1, 2 + Constant.CARTESIAN_AXES_INFINITY, -2 - Constant.CARTESIAN_AXES_INFINITY, -1, 10));

        POINTS_64QAM.add(new Point(-3.5, 3.5, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, 32));
        POINTS_64QAM.add(new Point(-2.5, 3.5, -3, -2, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, 34));
        POINTS_64QAM.add(new Point(-1.5, 3.5, -2, -1, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, 42));
        POINTS_64QAM.add(new Point(-0.5, 3.5, -1, 0, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, 40));
        POINTS_64QAM.add(new Point(0.5, 3.5, 0, 1, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, 8));
        POINTS_64QAM.add(new Point(1.5, 3.5, 1, 2, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, 10));
        POINTS_64QAM.add(new Point(2.5, 3.5, 2, 3, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, 2));
        POINTS_64QAM.add(new Point(3.5, 3.5, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, 0));
        POINTS_64QAM.add(new Point(-3.5, 2.5, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, 2, 3, 33));
        POINTS_64QAM.add(new Point(-2.5, 2.5, -3, -2, 2, 3, 35));
        POINTS_64QAM.add(new Point(-1.5, 2.5, -2, -1, 2, 3, 43));
        POINTS_64QAM.add(new Point(-0.5, 2.5, -1, 0, 2, 3, 41));
        POINTS_64QAM.add(new Point(0.5, 2.5, 0, 1, 2, 3, 9));
        POINTS_64QAM.add(new Point(1.5, 2.5, 1, 2, 2, 3, 11));
        POINTS_64QAM.add(new Point(2.5, 2.5, 2, 3, 2, 3, 3));
        POINTS_64QAM.add(new Point(3.5, 2.5, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, 2, 3, 1));
        POINTS_64QAM.add(new Point(-3.5, 1.5, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, 1, 2, 37));
        POINTS_64QAM.add(new Point(-2.5, 1.5, -3, -2, 1, 2, 39));
        POINTS_64QAM.add(new Point(-1.5, 1.5, -2, -1, 1, 2, 47));
        POINTS_64QAM.add(new Point(-0.5, 1.5, -1, 0, 1, 2, 45));
        POINTS_64QAM.add(new Point(0.5, 1.5, 0, 1, 1, 2, 13));
        POINTS_64QAM.add(new Point(1.5, 1.5, 1, 2, 1, 2, 15));
        POINTS_64QAM.add(new Point(2.5, 1.5, 2, 3, 1, 2, 7));
        POINTS_64QAM.add(new Point(3.5, 1.5, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, 1, 2, 5));
        POINTS_64QAM.add(new Point(-3.5, 0.5, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, 0, 1, 36));
        POINTS_64QAM.add(new Point(-2.5, 0.5, -3, -2, 0, 1, 38));
        POINTS_64QAM.add(new Point(-1.5, 0.5, -2, -1, 0, 1, 46));
        POINTS_64QAM.add(new Point(-0.5, 0.5, -1, 0, 0, 1, 44));
        POINTS_64QAM.add(new Point(0.5, 0.5, 0, 1, 0, 1, 12));
        POINTS_64QAM.add(new Point(1.5, 0.5, 1, 2, 0, 1, 14));
        POINTS_64QAM.add(new Point(2.5, 0.5, 2, 3, 0, 1, 6));
        POINTS_64QAM.add(new Point(3.5, 0.5, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, 0, 1, 4));
        POINTS_64QAM.add(new Point(-3.5, -0.5, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, -1, 0, 52));
        POINTS_64QAM.add(new Point(-2.5, -0.5, -3, -2, -1, 0, 54));
        POINTS_64QAM.add(new Point(-1.5, -0.5, -2, -1, -1, 0, 62));
        POINTS_64QAM.add(new Point(-0.5, -0.5, -1, 0, -1, 0, 60));
        POINTS_64QAM.add(new Point(0.5, -0.5, 0, 1, -1, 0, 28));
        POINTS_64QAM.add(new Point(1.5, -0.5, 1, 2, -1, 0, 30));
        POINTS_64QAM.add(new Point(2.5, -0.5, 2, 3, -1, 0, 22));
        POINTS_64QAM.add(new Point(3.5, -0.5, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, -1, 0, 20));
        POINTS_64QAM.add(new Point(-3.5, -1.5, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, -2, -1, 53));
        POINTS_64QAM.add(new Point(-2.5, -1.5, -3, -2, -2, -1, 55));
        POINTS_64QAM.add(new Point(-1.5, -1.5, -2, -1, -2, -1, 63));
        POINTS_64QAM.add(new Point(-0.5, -1.5, -1, 0, -2, -1, 61));
        POINTS_64QAM.add(new Point(0.5, -1.5, 0, 1, -2, -1, 29));
        POINTS_64QAM.add(new Point(1.5, -1.5, 1, 2, -2, -1, 31));
        POINTS_64QAM.add(new Point(2.5, -1.5, 2, 3, -2, -1, 23));
        POINTS_64QAM.add(new Point(3.5, -1.5, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, -2, -1, 21));
        POINTS_64QAM.add(new Point(-3.5, -2.5, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, -3, -2, 49));
        POINTS_64QAM.add(new Point(-2.5, -2.5, -3, -2, -3, -2, 51));
        POINTS_64QAM.add(new Point(-1.5, -2.5, -2, -1, -3, -2, 59));
        POINTS_64QAM.add(new Point(-0.5, -2.5, -1, 0, -3, -2, 57));
        POINTS_64QAM.add(new Point(0.5, -2.5, 0, 1, -3, -2, 25));
        POINTS_64QAM.add(new Point(1.5, -2.5, 1, 2, -3, -2, 27));
        POINTS_64QAM.add(new Point(2.5, -2.5, 2, 3, -3, -2, 19));
        POINTS_64QAM.add(new Point(3.5, -2.5, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, -3, -2, 17));
        POINTS_64QAM.add(new Point(-3.5, -3.5, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, 48));
        POINTS_64QAM.add(new Point(-2.5, -3.5, -3, -2, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, 50));
        POINTS_64QAM.add(new Point(-1.5, -3.5, -2, -1, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, 58));
        POINTS_64QAM.add(new Point(-0.5, -3.5, -1, 0, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, 56));
        POINTS_64QAM.add(new Point(0.5, -3.5, 0, 1, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, 24));
        POINTS_64QAM.add(new Point(1.5, -3.5, 1, 2, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, 26));
        POINTS_64QAM.add(new Point(2.5, -3.5, 2, 3, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, 18));
        POINTS_64QAM.add(new Point(3.5, -3.5, 3, 4 + Constant.CARTESIAN_AXES_INFINITY, -4 - Constant.CARTESIAN_AXES_INFINITY, -3, 16));

        POINTS_256QAM.add(new Point(-7.5, 7.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 100));
        POINTS_256QAM.add(new Point(-6.5, 7.5, -7, -6, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 101));
        POINTS_256QAM.add(new Point(-5.5, 7.5, -6, -5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 103));
        POINTS_256QAM.add(new Point(-4.5, 7.5, -5, -4, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 102));
        POINTS_256QAM.add(new Point(-3.5, 7.5, -4, -3, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 98));
        POINTS_256QAM.add(new Point(-2.5, 7.5, -3, -2, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 99));
        POINTS_256QAM.add(new Point(-1.5, 7.5, -2, -1, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 97));
        POINTS_256QAM.add(new Point(-0.5, 7.5, -1, 0, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 96));
        POINTS_256QAM.add(new Point(0.5, 7.5, 0, 1, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 32));
        POINTS_256QAM.add(new Point(1.5, 7.5, 1, 2, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 33));
        POINTS_256QAM.add(new Point(2.5, 7.5, 2, 3, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 35));
        POINTS_256QAM.add(new Point(3.5, 7.5, 3, 4, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 34));
        POINTS_256QAM.add(new Point(4.5, 7.5, 4, 5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 38));
        POINTS_256QAM.add(new Point(5.5, 7.5, 5, 6, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 39));
        POINTS_256QAM.add(new Point(6.5, 7.5, 6, 7, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 37));
        POINTS_256QAM.add(new Point(7.5, 7.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 36));
        POINTS_256QAM.add(new Point(-7.5, 6.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 6, 7, 108));
        POINTS_256QAM.add(new Point(-6.5, 6.5, -7, -6, 6, 7, 109));
        POINTS_256QAM.add(new Point(-5.5, 6.5, -6, -5, 6, 7, 111));
        POINTS_256QAM.add(new Point(-4.5, 6.5, -5, -4, 6, 7, 110));
        POINTS_256QAM.add(new Point(-3.5, 6.5, -4, -3, 6, 7, 106));
        POINTS_256QAM.add(new Point(-2.5, 6.5, -3, -2, 6, 7, 107));
        POINTS_256QAM.add(new Point(-1.5, 6.5, -2, -1, 6, 7, 105));
        POINTS_256QAM.add(new Point(-0.5, 6.5, -1, 0, 6, 7, 104));
        POINTS_256QAM.add(new Point(0.5, 6.5, 0, 1, 6, 7, 40));
        POINTS_256QAM.add(new Point(1.5, 6.5, 1, 2, 6, 7, 41));
        POINTS_256QAM.add(new Point(2.5, 6.5, 2, 3, 6, 7, 43));
        POINTS_256QAM.add(new Point(3.5, 6.5, 3, 4, 6, 7, 42));
        POINTS_256QAM.add(new Point(4.5, 6.5, 4, 5, 6, 7, 46));
        POINTS_256QAM.add(new Point(5.5, 6.5, 5, 6, 6, 7, 47));
        POINTS_256QAM.add(new Point(6.5, 6.5, 6, 7, 6, 7, 45));
        POINTS_256QAM.add(new Point(7.5, 6.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 6, 7, 44));
        POINTS_256QAM.add(new Point(-7.5, 5.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 5, 6, 124));
        POINTS_256QAM.add(new Point(-6.5, 5.5, -7, -6, 5, 6, 125));
        POINTS_256QAM.add(new Point(-5.5, 5.5, -6, -5, 5, 6, 127));
        POINTS_256QAM.add(new Point(-4.5, 5.5, -5, -4, 5, 6, 126));
        POINTS_256QAM.add(new Point(-3.5, 5.5, -4, -3, 5, 6, 122));
        POINTS_256QAM.add(new Point(-2.5, 5.5, -3, -2, 5, 6, 123));
        POINTS_256QAM.add(new Point(-1.5, 5.5, -2, -1, 5, 6, 121));
        POINTS_256QAM.add(new Point(-0.5, 5.5, -1, 0, 5, 6, 120));
        POINTS_256QAM.add(new Point(0.5, 5.5, 0, 1, 5, 6, 56));
        POINTS_256QAM.add(new Point(1.5, 5.5, 1, 2, 5, 6, 57));
        POINTS_256QAM.add(new Point(2.5, 5.5, 2, 3, 5, 6, 59));
        POINTS_256QAM.add(new Point(3.5, 5.5, 3, 4, 5, 6, 58));
        POINTS_256QAM.add(new Point(4.5, 5.5, 4, 5, 5, 6, 62));
        POINTS_256QAM.add(new Point(5.5, 5.5, 5, 6, 5, 6, 63));
        POINTS_256QAM.add(new Point(6.5, 5.5, 6, 7, 5, 6, 61));
        POINTS_256QAM.add(new Point(7.5, 5.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 5, 6, 60));
        POINTS_256QAM.add(new Point(-7.5, 4.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 4, 5, 116));
        POINTS_256QAM.add(new Point(-6.5, 4.5, -7, -6, 4, 5, 117));
        POINTS_256QAM.add(new Point(-5.5, 4.5, -6, -5, 4, 5, 119));
        POINTS_256QAM.add(new Point(-4.5, 4.5, -5, -4, 4, 5, 118));
        POINTS_256QAM.add(new Point(-3.5, 4.5, -4, -3, 4, 5, 114));
        POINTS_256QAM.add(new Point(-2.5, 4.5, -3, -2, 4, 5, 115));
        POINTS_256QAM.add(new Point(-1.5, 4.5, -2, -1, 4, 5, 113));
        POINTS_256QAM.add(new Point(-0.5, 4.5, -1, 0, 4, 5, 112));
        POINTS_256QAM.add(new Point(0.5, 4.5, 0, 1, 4, 5, 48));
        POINTS_256QAM.add(new Point(1.5, 4.5, 1, 2, 4, 5, 49));
        POINTS_256QAM.add(new Point(2.5, 4.5, 2, 3, 4, 5, 51));
        POINTS_256QAM.add(new Point(3.5, 4.5, 3, 4, 4, 5, 50));
        POINTS_256QAM.add(new Point(4.5, 4.5, 4, 5, 4, 5, 54));
        POINTS_256QAM.add(new Point(5.5, 4.5, 5, 6, 4, 5, 55));
        POINTS_256QAM.add(new Point(6.5, 4.5, 6, 7, 4, 5, 53));
        POINTS_256QAM.add(new Point(7.5, 4.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 4, 5, 52));
        POINTS_256QAM.add(new Point(-7.5, 3.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 3, 4, 84));
        POINTS_256QAM.add(new Point(-6.5, 3.5, -7, -6, 3, 4, 85));
        POINTS_256QAM.add(new Point(-5.5, 3.5, -6, -5, 3, 4, 87));
        POINTS_256QAM.add(new Point(-4.5, 3.5, -5, -4, 3, 4, 86));
        POINTS_256QAM.add(new Point(-3.5, 3.5, -4, -3, 3, 4, 82));
        POINTS_256QAM.add(new Point(-2.5, 3.5, -3, -2, 3, 4, 83));
        POINTS_256QAM.add(new Point(-1.5, 3.5, -2, -1, 3, 4, 81));
        POINTS_256QAM.add(new Point(-0.5, 3.5, -1, 0, 3, 4, 80));
        POINTS_256QAM.add(new Point(0.5, 3.5, 0, 1, 3, 4, 16));
        POINTS_256QAM.add(new Point(1.5, 3.5, 1, 2, 3, 4, 17));
        POINTS_256QAM.add(new Point(2.5, 3.5, 2, 3, 3, 4, 19));
        POINTS_256QAM.add(new Point(3.5, 3.5, 3, 4, 3, 4, 18));
        POINTS_256QAM.add(new Point(4.5, 3.5, 4, 5, 3, 4, 22));
        POINTS_256QAM.add(new Point(5.5, 3.5, 5, 6, 3, 4, 23));
        POINTS_256QAM.add(new Point(6.5, 3.5, 6, 7, 3, 4, 21));
        POINTS_256QAM.add(new Point(7.5, 3.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 3, 4, 20));
        POINTS_256QAM.add(new Point(-7.5, 2.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 2, 3, 82));
        POINTS_256QAM.add(new Point(-6.5, 2.5, -7, -6, 2, 3, 83));
        POINTS_256QAM.add(new Point(-5.5, 2.5, -6, -5, 2, 3, 95));
        POINTS_256QAM.add(new Point(-4.5, 2.5, -5, -4, 2, 3, 94));
        POINTS_256QAM.add(new Point(-3.5, 2.5, -4, -3, 2, 3, 90));
        POINTS_256QAM.add(new Point(-2.5, 2.5, -3, -2, 2, 3, 91));
        POINTS_256QAM.add(new Point(-1.5, 2.5, -2, -1, 2, 3, 89));
        POINTS_256QAM.add(new Point(-0.5, 2.5, -1, 0, 2, 3, 88));
        POINTS_256QAM.add(new Point(0.5, 2.5, 0, 1, 2, 3, 24));
        POINTS_256QAM.add(new Point(1.5, 2.5, 1, 2, 2, 3, 25));
        POINTS_256QAM.add(new Point(2.5, 2.5, 2, 3, 2, 3, 27));
        POINTS_256QAM.add(new Point(3.5, 2.5, 3, 4, 2, 3, 26));
        POINTS_256QAM.add(new Point(4.5, 2.5, 4, 5, 2, 3, 30));
        POINTS_256QAM.add(new Point(5.5, 2.5, 5, 6, 2, 3, 31));
        POINTS_256QAM.add(new Point(6.5, 2.5, 6, 7, 2, 3, 29));
        POINTS_256QAM.add(new Point(7.5, 2.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 2, 3, 28));
        POINTS_256QAM.add(new Point(-7.5, 1.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 1, 2, 76));
        POINTS_256QAM.add(new Point(-6.5, 1.5, -7, -6, 1, 2, 77));
        POINTS_256QAM.add(new Point(-5.5, 1.5, -6, -5, 1, 2, 79));
        POINTS_256QAM.add(new Point(-4.5, 1.5, -5, -4, 1, 2, 78));
        POINTS_256QAM.add(new Point(-3.5, 1.5, -4, -3, 1, 2, 74));
        POINTS_256QAM.add(new Point(-2.5, 1.5, -3, -2, 1, 2, 75));
        POINTS_256QAM.add(new Point(-1.5, 1.5, -2, -1, 1, 2, 73));
        POINTS_256QAM.add(new Point(-0.5, 1.5, -1, 0, 1, 2, 72));
        POINTS_256QAM.add(new Point(0.5, 1.5, 0, 1, 1, 2, 8));
        POINTS_256QAM.add(new Point(1.5, 1.5, 1, 2, 1, 2, 9));
        POINTS_256QAM.add(new Point(2.5, 1.5, 2, 3, 1, 2, 11));
        POINTS_256QAM.add(new Point(3.5, 1.5, 3, 4, 1, 2, 10));
        POINTS_256QAM.add(new Point(4.5, 1.5, 4, 5, 1, 2, 14));
        POINTS_256QAM.add(new Point(5.5, 1.5, 5, 6, 1, 2, 15));
        POINTS_256QAM.add(new Point(6.5, 1.5, 6, 7, 1, 2, 13));
        POINTS_256QAM.add(new Point(7.5, 1.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 1, 2, 12));
        POINTS_256QAM.add(new Point(-7.5, 0.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 0, 1, 68));
        POINTS_256QAM.add(new Point(-6.5, 0.5, -7, -6, 0, 1, 69));
        POINTS_256QAM.add(new Point(-5.5, 0.5, -6, -5, 0, 1, 71));
        POINTS_256QAM.add(new Point(-4.5, 0.5, -5, -4, 0, 1, 70));
        POINTS_256QAM.add(new Point(-3.5, 0.5, -4, -3, 0, 1, 66));
        POINTS_256QAM.add(new Point(-2.5, 0.5, -3, -2, 0, 1, 67));
        POINTS_256QAM.add(new Point(-1.5, 0.5, -2, -1, 0, 1, 65));
        POINTS_256QAM.add(new Point(-0.5, 0.5, -1, 0, 0, 1, 64));
        POINTS_256QAM.add(new Point(0.5, 0.5, 0, 1, 0, 1, 0));
        POINTS_256QAM.add(new Point(1.5, 0.5, 1, 2, 0, 1, 1));
        POINTS_256QAM.add(new Point(2.5, 0.5, 2, 3, 0, 1, 3));
        POINTS_256QAM.add(new Point(3.5, 0.5, 3, 4, 0, 1, 2));
        POINTS_256QAM.add(new Point(4.5, 0.5, 4, 5, 0, 1, 6));
        POINTS_256QAM.add(new Point(5.5, 0.5, 5, 6, 0, 1, 7));
        POINTS_256QAM.add(new Point(6.5, 0.5, 6, 7, 0, 1, 5));
        POINTS_256QAM.add(new Point(7.5, 0.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, 0, 1, 4));
        POINTS_256QAM.add(new Point(-7.5, -0.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, -1, 0, 196));
        POINTS_256QAM.add(new Point(-6.5, -0.5, -7, -6, -1, 0, 197));
        POINTS_256QAM.add(new Point(-5.5, -0.5, -6, -5, -1, 0, 199));
        POINTS_256QAM.add(new Point(-4.5, -0.5, -5, -4, -1, 0, 198));
        POINTS_256QAM.add(new Point(-3.5, -0.5, -4, -3, -1, 0, 194));
        POINTS_256QAM.add(new Point(-2.5, -0.5, -3, -2, -1, 0, 195));
        POINTS_256QAM.add(new Point(-1.5, -0.5, -2, -1, -1, 0, 193));
        POINTS_256QAM.add(new Point(-0.5, -0.5, -1, 0, -1, 0, 192));
        POINTS_256QAM.add(new Point(0.5, -0.5, 0, 1, -1, 0, 128));
        POINTS_256QAM.add(new Point(1.5, -0.5, 1, 2, -1, 0, 129));
        POINTS_256QAM.add(new Point(2.5, -0.5, 2, 3, -1, 0, 131));
        POINTS_256QAM.add(new Point(3.5, -0.5, 3, 4, -1, 0, 130));
        POINTS_256QAM.add(new Point(4.5, -0.5, 4, 5, -1, 0, 134));
        POINTS_256QAM.add(new Point(5.5, -0.5, 5, 6, -1, 0, 135));
        POINTS_256QAM.add(new Point(6.5, -0.5, 6, 7, -1, 0, 133));
        POINTS_256QAM.add(new Point(7.5, -0.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, -1, 0, 132));
        POINTS_256QAM.add(new Point(-7.5, -1.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, -2, -1, 204));
        POINTS_256QAM.add(new Point(-6.5, -1.5, -7, -6, -2, -1, 205));
        POINTS_256QAM.add(new Point(-5.5, -1.5, -6, -5, -2, -1, 207));
        POINTS_256QAM.add(new Point(-4.5, -1.5, -5, -4, -2, -1, 206));
        POINTS_256QAM.add(new Point(-3.5, -1.5, -4, -3, -2, -1, 202));
        POINTS_256QAM.add(new Point(-2.5, -1.5, -3, -2, -2, -1, 203));
        POINTS_256QAM.add(new Point(-1.5, -1.5, -2, -1, -2, -1, 201));
        POINTS_256QAM.add(new Point(-0.5, -1.5, -1, 0, -2, -1, 200));
        POINTS_256QAM.add(new Point(0.5, -1.5, 0, 1, -2, -1, 136));
        POINTS_256QAM.add(new Point(1.5, -1.5, 1, 2, -2, -1, 137));
        POINTS_256QAM.add(new Point(2.5, -1.5, 2, 3, -2, -1, 139));
        POINTS_256QAM.add(new Point(3.5, -1.5, 3, 4, -2, -1, 138));
        POINTS_256QAM.add(new Point(4.5, -1.5, 4, 5, -2, -1, 142));
        POINTS_256QAM.add(new Point(5.5, -1.5, 5, 6, -2, -1, 143));
        POINTS_256QAM.add(new Point(6.5, -1.5, 6, 7, -2, -1, 141));
        POINTS_256QAM.add(new Point(7.5, -1.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, -2, -1, 140));
        POINTS_256QAM.add(new Point(-7.5, -2.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, -3, -2, 220));
        POINTS_256QAM.add(new Point(-6.5, -2.5, -7, -6, -3, -2, 221));
        POINTS_256QAM.add(new Point(-5.5, -2.5, -6, -5, -3, -2, 223));
        POINTS_256QAM.add(new Point(-4.5, -2.5, -5, -4, -3, -2, 222));
        POINTS_256QAM.add(new Point(-3.5, -2.5, -4, -3, -3, -2, 218));
        POINTS_256QAM.add(new Point(-2.5, -2.5, -3, -2, -3, -2, 219));
        POINTS_256QAM.add(new Point(-1.5, -2.5, -2, -1, -3, -2, 217));
        POINTS_256QAM.add(new Point(-0.5, -2.5, -1, 0, -3, -2, 216));
        POINTS_256QAM.add(new Point(0.5, -2.5, 0, 1, -3, -2, 152));
        POINTS_256QAM.add(new Point(1.5, -2.5, 1, 2, -3, -2, 153));
        POINTS_256QAM.add(new Point(2.5, -2.5, 2, 3, -3, -2, 155));
        POINTS_256QAM.add(new Point(3.5, -2.5, 3, 4, -3, -2, 154));
        POINTS_256QAM.add(new Point(4.5, -2.5, 4, 5, -3, -2, 158));
        POINTS_256QAM.add(new Point(5.5, -2.5, 5, 6, -3, -2, 159));
        POINTS_256QAM.add(new Point(6.5, -2.5, 6, 7, -3, -2, 157));
        POINTS_256QAM.add(new Point(7.5, -2.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, -3, -2, 156));
        POINTS_256QAM.add(new Point(-7.5, -3.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, -4, -3, 212));
        POINTS_256QAM.add(new Point(-6.5, -3.5, -7, -6, -4, -3, 213));
        POINTS_256QAM.add(new Point(-5.5, -3.5, -6, -5, -4, -3, 215));
        POINTS_256QAM.add(new Point(-4.5, -3.5, -5, -4, -4, -3, 214));
        POINTS_256QAM.add(new Point(-3.5, -3.5, -4, -3, -4, -3, 210));
        POINTS_256QAM.add(new Point(-2.5, -3.5, -3, -2, -4, -3, 211));
        POINTS_256QAM.add(new Point(-1.5, -3.5, -2, -1, -4, -3, 209));
        POINTS_256QAM.add(new Point(-0.5, -3.5, -1, 0, -4, -3, 208));
        POINTS_256QAM.add(new Point(0.5, -3.5, 0, 1, -4, -3, 144));
        POINTS_256QAM.add(new Point(1.5, -3.5, 1, 2, -4, -3, 145));
        POINTS_256QAM.add(new Point(2.5, -3.5, 2, 3, -4, -3, 147));
        POINTS_256QAM.add(new Point(3.5, -3.5, 3, 4, -4, -3, 146));
        POINTS_256QAM.add(new Point(4.5, -3.5, 4, 5, -4, -3, 150));
        POINTS_256QAM.add(new Point(5.5, -3.5, 5, 6, -4, -3, 151));
        POINTS_256QAM.add(new Point(6.5, -3.5, 6, 7, -4, -3, 149));
        POINTS_256QAM.add(new Point(7.5, -3.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, -4, -3, 148));
        POINTS_256QAM.add(new Point(-7.5, -4.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, -5, -4, 244));
        POINTS_256QAM.add(new Point(-6.5, -4.5, -7, -6, -5, -4, 245));
        POINTS_256QAM.add(new Point(-5.5, -4.5, -6, -5, -5, -4, 247));
        POINTS_256QAM.add(new Point(-4.5, -4.5, -5, -4, -5, -4, 246));
        POINTS_256QAM.add(new Point(-3.5, -4.5, -4, -3, -5, -4, 242));
        POINTS_256QAM.add(new Point(-2.5, -4.5, -3, -2, -5, -4, 243));
        POINTS_256QAM.add(new Point(-1.5, -4.5, -2, -1, -5, -4, 241));
        POINTS_256QAM.add(new Point(-0.5, -4.5, -1, 0, -5, -4, 240));
        POINTS_256QAM.add(new Point(0.5, -4.5, 0, 1, -5, -4, 176));
        POINTS_256QAM.add(new Point(1.5, -4.5, 1, 2, -5, -4, 177));
        POINTS_256QAM.add(new Point(2.5, -4.5, 2, 3, -5, -4, 179));
        POINTS_256QAM.add(new Point(3.5, -4.5, 3, 4, -5, -4, 178));
        POINTS_256QAM.add(new Point(4.5, -4.5, 4, 5, -5, -4, 182));
        POINTS_256QAM.add(new Point(5.5, -4.5, 5, 6, -5, -4, 183));
        POINTS_256QAM.add(new Point(6.5, -4.5, 6, 7, -5, -4, 181));
        POINTS_256QAM.add(new Point(7.5, -4.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, -5, -4, 180));
        POINTS_256QAM.add(new Point(-7.5, -5.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, -6, -5, 252));
        POINTS_256QAM.add(new Point(-6.5, -5.5, -7, -6, -6, -5, 253));
        POINTS_256QAM.add(new Point(-5.5, -5.5, -6, -5, -6, -5, 255));
        POINTS_256QAM.add(new Point(-4.5, -5.5, -5, -4, -6, -5, 254));
        POINTS_256QAM.add(new Point(-3.5, -5.5, -4, -3, -6, -5, 250));
        POINTS_256QAM.add(new Point(-2.5, -5.5, -3, -2, -6, -5, 251));
        POINTS_256QAM.add(new Point(-1.5, -5.5, -2, -1, -6, -5, 249));
        POINTS_256QAM.add(new Point(-0.5, -5.5, -1, 0, -6, -5, 248));
        POINTS_256QAM.add(new Point(0.5, -5.5, 0, 1, -6, -5, 184));
        POINTS_256QAM.add(new Point(1.5, -5.5, 1, 2, -6, -5, 185));
        POINTS_256QAM.add(new Point(2.5, -5.5, 2, 3, -6, -5, 187));
        POINTS_256QAM.add(new Point(3.5, -5.5, 3, 4, -6, -5, 186));
        POINTS_256QAM.add(new Point(4.5, -5.5, 4, 5, -6, -5, 190));
        POINTS_256QAM.add(new Point(5.5, -5.5, 5, 6, -6, -5, 191));
        POINTS_256QAM.add(new Point(6.5, -5.5, 6, 7, -6, -5, 189));
        POINTS_256QAM.add(new Point(7.5, -5.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, -6, -5, 188));
        POINTS_256QAM.add(new Point(-7.5, -6.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, -7, -6, 236));
        POINTS_256QAM.add(new Point(-6.5, -6.5, -7, -6, -7, -6, 237));
        POINTS_256QAM.add(new Point(-5.5, -6.5, -6, -5, -7, -6, 239));
        POINTS_256QAM.add(new Point(-4.5, -6.5, -5, -4, -7, -6, 238));
        POINTS_256QAM.add(new Point(-3.5, -6.5, -4, -3, -7, -6, 234));
        POINTS_256QAM.add(new Point(-2.5, -6.5, -3, -2, -7, -6, 235));
        POINTS_256QAM.add(new Point(-1.5, -6.5, -2, -1, -7, -6, 233));
        POINTS_256QAM.add(new Point(-0.5, -6.5, -1, 0, -7, -6, 232));
        POINTS_256QAM.add(new Point(0.5, -6.5, 0, 1, -7, -6, 168));
        POINTS_256QAM.add(new Point(1.5, -6.5, 1, 2, -7, -6, 169));
        POINTS_256QAM.add(new Point(2.5, -6.5, 2, 3, -7, -6, 171));
        POINTS_256QAM.add(new Point(3.5, -6.5, 3, 4, -7, -6, 170));
        POINTS_256QAM.add(new Point(4.5, -6.5, 4, 5, -7, -6, 174));
        POINTS_256QAM.add(new Point(5.5, -6.5, 5, 6, -7, -6, 175));
        POINTS_256QAM.add(new Point(6.5, -6.5, 6, 7, -7, -6, 173));
        POINTS_256QAM.add(new Point(7.5, -6.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, -7, -6, 172));
        POINTS_256QAM.add(new Point(-7.5, -7.5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 228));
        POINTS_256QAM.add(new Point(-6.5, -7.5, -7, -6, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 229));
        POINTS_256QAM.add(new Point(-5.5, -7.5, -6, -5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 231));
        POINTS_256QAM.add(new Point(-4.5, -7.5, -5, -4, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 230));
        POINTS_256QAM.add(new Point(-3.5, -7.5, -4, -3, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 226));
        POINTS_256QAM.add(new Point(-2.5, -7.5, -3, -2, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 227));
        POINTS_256QAM.add(new Point(-1.5, -7.5, -2, -1, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 225));
        POINTS_256QAM.add(new Point(-0.5, -7.5, -1, 0, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 224));
        POINTS_256QAM.add(new Point(0.5, -7.5, 0, 1, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 160));
        POINTS_256QAM.add(new Point(1.5, -7.5, 1, 2, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 161));
        POINTS_256QAM.add(new Point(2.5, -7.5, 2, 3, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 163));
        POINTS_256QAM.add(new Point(3.5, -7.5, 3, 4, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 162));
        POINTS_256QAM.add(new Point(4.5, -7.5, 4, 5, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 166));
        POINTS_256QAM.add(new Point(5.5, -7.5, 5, 6, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 167));
        POINTS_256QAM.add(new Point(6.5, -7.5, 6, 7, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 165));
        POINTS_256QAM.add(new Point(7.5, -7.5, 7, 8 + Constant.CARTESIAN_AXES_INFINITY, -8 - Constant.CARTESIAN_AXES_INFINITY, -7, 164));
    }
}
